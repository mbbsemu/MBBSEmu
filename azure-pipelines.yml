# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'windows-2022'

variables:
  buildConfiguration: 'Release'
  netVersion: 'net7.0'
  currentDate: $[upper(format('{0:MMddyy}', pipeline.startTime))]
  currentBuildCounter: $[counter(format('{0:MMddyy}', pipeline.startTime), 1)]
  buildNumber: $(currentDate)-$(currentBuildCounter)

steps:
- script: echo $(buildNumber) > $(System.DefaultWorkingDirectory)\MBBSEmu\Assets\version.txt

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: ''
    checkLatest: true

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**\*.sln'

- task: VSBuild@1
  displayName: 'Building MBBSEmu'
  inputs:
    configuration: $(buildConfiguration)

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\MBBSEmu.Tests\bin\$(buildConfiguration)\$(netVersion)\MBBSEmu.Tests.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    runTestsInIsolation: true
    runTestsInParallel: true
    codeCoverageEnabled: true
    publishRunAttachments: false
    rerunFailedTests: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**\MBBSEmu.csproj'
    arguments: '--output $(Build.BinariesDirectory)\publish\win-x64\ --configuration $(buildConfiguration) --runtime win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeNativeLibrariesInSingleFile=true -p:PublishTrimmed=true -p:CopyOutputSymbolsToPublishDirectory=false --verbosity n'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**\MBBSEmu.csproj'
    arguments: '--output $(Build.BinariesDirectory)\publish\win-x86\ --configuration $(buildConfiguration) --runtime win-x86 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeNativeLibrariesInSingleFile=true -p:PublishTrimmed=true -p:CopyOutputSymbolsToPublishDirectory=false --verbosity n'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**\MBBSEmu.csproj'
    arguments: '--output $(Build.BinariesDirectory)\publish\linux-x64\ --configuration $(buildConfiguration) --runtime linux-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeNativeLibrariesInSingleFile=true -p:CopyOutputSymbolsToPublishDirectory=false --verbosity n'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**\MBBSEmu.csproj'
    arguments: '--output $(Build.BinariesDirectory)\publish\linux-arm\ --configuration $(buildConfiguration) --runtime linux-arm --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeNativeLibrariesInSingleFile=true -p:CopyOutputSymbolsToPublishDirectory=false --verbosity n'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**\MBBSEmu.csproj'
    arguments: '--output $(Build.BinariesDirectory)\publish\osx-x64\ --configuration $(buildConfiguration) --runtime osx-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeNativeLibrariesInSingleFile=true -p:CopyOutputSymbolsToPublishDirectory=false --verbosity n'
    zipAfterPublish: false

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)\publish\win-x64\MBBSEmu'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.BinariesDirectory)\publish\zipped\mbbsemu-win-x64-$(buildNumber).zip'
    replaceExistingArchive: true
    verbose: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)\publish\win-x86\MBBSEmu'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.BinariesDirectory)\publish\zipped\mbbsemu-win-x32-$(buildNumber).zip'
    replaceExistingArchive: true
    verbose: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)\publish\linux-x64\MBBSEmu'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.BinariesDirectory)\publish\zipped\mbbsemu-linux-x64-$(buildNumber).zip'
    replaceExistingArchive: true
    verbose: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)\publish\linux-arm\MBBSEmu'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.BinariesDirectory)\publish\zipped\mbbsemu-linux-arm-$(buildNumber).zip'
    replaceExistingArchive: true
    verbose: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)\publish\osx-x64\MBBSEmu'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.BinariesDirectory)\publish\zipped\mbbsemu-osx-x64-$(buildNumber).zip'
    replaceExistingArchive: true
    verbose: true

- task: AzureFileCopy@3
  inputs:
    SourcePath: '$(Build.BinariesDirectory)\publish\zipped'
    azureSubscription: 'Primary Azure Subscription(95c13f74-9879-4506-b31c-224e0bcf5230)'
    Destination: 'AzureBlob'
    storage: 'mbbsemu'
    ContainerName: '$web\builds\$(Build.SourceBranchName)\$(currentDate)'
